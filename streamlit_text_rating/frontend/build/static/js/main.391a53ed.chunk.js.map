{"version":3,"sources":["HoverRating.tsx","index.tsx"],"names":["HoverRating","state","rating","ratingText","hover","render","props","theme","text","args","fontFamily","fontSize","precision","labels","console","log","style","display","alignItems","justifyContent","width","margin","fontWeight","marginBottom","padding","Box","sx","Rating","name","value","onChange","event","newValue","handleOnChange","onChangeActive","newHover","handleOnChangeActive","emptyIcon","opacity","ml","setState","prevState","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"2RAiCMA,E,4MACGC,MAAQ,CAACC,OAAQ,EAAEC,WAAW,GAAGC,MAAM,G,EAEvCC,OAAS,WAQI,EAAKC,MAAfC,MAAR,IAGMC,EAAO,EAAKF,MAAMG,KAAX,KACPC,EAAa,EAAKJ,MAAMG,KAAX,WACbE,EAAW,EAAKL,MAAMG,KAAX,SACXG,EAAY,EAAKN,MAAMG,KAAX,UACZI,EAAS,EAAKP,MAAMG,KAAX,OAGjB,OAFEK,QAAQC,IAAIF,GAGZ,uBAAKG,MAAO,CAACC,QAAQ,OAAQC,WAAW,SAAUC,eAAe,aAAaC,MAAM,OAAOC,OAAO,QAC5F,qBACAL,MAAO,CACPL,SAASA,EACTW,WAAW,IACXC,aAAa,MACbb,WAAWA,EACXc,QAAQ,SACPhB,GAGP,gBAACiB,EAAA,EAAD,CACEC,GAAI,CACFN,MAAO,IACPH,QAAS,OACTC,WAAY,WAGd,gBAACS,EAAA,EAAD,CACEC,KAAK,iBACLC,MAAO,EAAK5B,MAAMC,OAClBU,UAAWA,EACXkB,SAAU,SAACC,EAAOC,GACjBA,GAAY,EAAKC,eAAeD,IAEjCE,eAAgB,SAACH,EAAOI,GACvBA,GAAY,EAAKC,qBAAqBD,IAEvCE,UAAW,gBAAC,IAAD,CAAUrB,MAAO,CAAEsB,QAAS,KAAQ3B,SAAS,cAEnC,OAAtB,EAAKV,MAAMC,QACV,gBAACuB,EAAA,EAAD,CAAKC,GAAI,CAAEa,GAAI,IAAM1B,GAA6B,IAAtB,EAAKZ,MAAMG,MAAe,EAAKH,MAAMG,MAAQ,EAAKH,MAAMC,Y,EAOpF+B,eAAiB,SAACD,GAEtB,EAAKQ,UACH,SAAAC,GAAS,MAAK,CAAEvC,OAAQ8B,MAG1BU,IAAUC,kBAAkBX,I,EAExBI,qBAAuB,SAACD,GAC1B,EAAKK,UACL,SAAAC,GAAS,MAAK,CAAErC,MAAO+B,O,YAtEHS,KA4EXC,cAAwB7C,GCzGvC8C,IAASzC,OACP,kBAAC,IAAM0C,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.391a53ed.chunk.js","sourcesContent":["import * as React from 'react';\nimport Rating from '@mui/material/Rating';\nimport Box from '@mui/material/Box';\nimport StarIcon from '@mui/icons-material/Star';\n\nimport {\n  withStreamlitConnection,\n  StreamlitComponentBase,\n  Streamlit,\n} from \"streamlit-component-lib\"\n\n// const labels: { [index: string]: string } = {\n//   0.5: 'Useless',\n//   1: 'Useless+',\n//   1.5: 'Poor',\n//   2: 'Poor+',\n//   2.5: 'Ok',\n//   3: 'Ok+',\n//   3.5: 'Good',\n//   4: 'Good+',\n//   4.5: 'Excellent',\n//   5: 'Excellent+',\n// };\n\n// export default function HoverRating() {\n\ninterface State {\n rating: number,\n ratingText: string,\n//  value: number,\n hover: number,\n}\n\nclass HoverRating extends StreamlitComponentBase<State> {\n  public state = {rating: 0,ratingText:\"\",hover:0}\n\n  public render = (): React.ReactNode => {\n\n\n\n\n    // Streamlit sends us a theme object via props that we can use to ensure\n    // that our component has visuals that match the active theme in a\n    // streamlit app.\n    const { theme } = this.props\n    const style: React.CSSProperties = {}\n\n    const text = this.props.args[\"text\"] as string\n    const fontFamily = this.props.args[\"fontFamily\"] as string\n    const fontSize = this.props.args[\"fontSize\"] as string\n    const precision = this.props.args[\"precision\"] as number\n    const labels = this.props.args[\"labels\"]\n    console.log(labels) //-- track this in chrome inspect\n\n  return (\n    <div style={{display:'flex', alignItems:'center', justifyContent:'flex-start',width:'100%',margin:'0px',}}>\n          <p\n          style={{\n          fontSize:fontSize,\n          fontWeight:320,\n          marginBottom:'0px',\n          fontFamily:fontFamily,\n          padding:'12px',}}>\n          {text}\n          </p>\n\n    <Box\n      sx={{\n        width: 200,\n        display: 'flex',\n        alignItems: 'center',\n      }}\n    >\n      <Rating\n        name=\"hover-feedback\"\n        value={this.state.rating}\n        precision={precision}\n        onChange={(event, newValue) => {\n         newValue && this.handleOnChange(newValue);\n        }}\n        onChangeActive={(event, newHover) => {\n         newHover && this.handleOnChangeActive(newHover);\n        }}\n        emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\n      />\n      {this.state.rating !== null && (\n        <Box sx={{ ml: 2 }}>{labels[this.state.hover !== -1 ? this.state.hover : this.state.rating]}</Box>\n      )}\n    </Box>\n  </div>\n  );\n}\n\nprivate handleOnChange = (newValue:number): void => {\n\n    this.setState(\n      prevState => ({ rating: newValue}),\n    );\n\n    Streamlit.setComponentValue(newValue) ;}\n\nprivate handleOnChangeActive = (newHover:number): void => {\n      this.setState(\n      prevState => ({ hover: newHover}),\n    );\n  }\n}\n\n\nexport default withStreamlitConnection(HoverRating)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport HoverRating from \"./HoverRating\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <HoverRating />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}